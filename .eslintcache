[{"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\index.tsx":"1","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\reportWebVitals.ts":"2","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\App.tsx":"3","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Home\\home.tsx":"4","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Home\\AppBar.tsx":"5","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Home\\Renderbook.tsx":"6","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadIndex.tsx":"7","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesIndex.tsx":"8","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\helpers\\environment.js":"9","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadTable.tsx":"10","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadEdit.tsx":"11","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadPost.tsx":"12","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Auth\\Login.tsx":"13","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Auth\\Register.tsx":"14","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesEdit.tsx":"15","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesTable.tsx":"16","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesCreate.tsx":"17"},{"size":516,"mtime":1632259603069,"results":"18","hashOfConfig":"19"},{"size":440,"mtime":1632259603070,"results":"20","hashOfConfig":"19"},{"size":1110,"mtime":1633290822445,"results":"21","hashOfConfig":"19"},{"size":2788,"mtime":1633291812086,"results":"22","hashOfConfig":"19"},{"size":2264,"mtime":1633291699706,"results":"23","hashOfConfig":"19"},{"size":3231,"mtime":1633296712362,"results":"24","hashOfConfig":"19"},{"size":3806,"mtime":1633281906331,"results":"25","hashOfConfig":"19"},{"size":3332,"mtime":1633295604847,"results":"26","hashOfConfig":"19"},{"size":301,"mtime":1633402963635,"results":"27","hashOfConfig":"19"},{"size":2738,"mtime":1633306492244,"results":"28","hashOfConfig":"19"},{"size":4066,"mtime":1633296738170,"results":"29","hashOfConfig":"19"},{"size":5691,"mtime":1633223701299,"results":"30","hashOfConfig":"19"},{"size":2900,"mtime":1633138573941,"results":"31","hashOfConfig":"19"},{"size":3152,"mtime":1633138588301,"results":"32","hashOfConfig":"19"},{"size":3683,"mtime":1633296064864,"results":"33","hashOfConfig":"19"},{"size":2678,"mtime":1633297721584,"results":"34","hashOfConfig":"19"},{"size":5050,"mtime":1633306635046,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zoiga9",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\index.tsx",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\reportWebVitals.ts",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\App.tsx",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Home\\home.tsx",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Home\\AppBar.tsx",["79","80"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport logo from '../../Assets/ishmael.png';\r\nimport { Link } from 'react-router-dom';\r\nimport './Home.css';\r\nimport Home from '../Home/home'\r\n\r\nimport Login from '../Auth/Login';\r\nimport Register from '../Auth/Register';\r\n\r\ninterface Props {\r\n  token: string;\r\n  clickLogout: () => void;\r\n  updateToken: (newToken: string) => void;\r\n}\r\n\r\ntype State = {\r\n  register: boolean;\r\n  login: boolean;\r\n  \r\n}\r\n\r\nexport default class TopBar extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n          register: false,\r\n          login: false,\r\n        \r\n        }\r\n    }\r\n\r\n  \r\n    handleOpenReg = () => {\r\n      this.setState({\r\n        register: true,\r\n      });\r\n    };\r\n\r\n    handleOpenLog = () => {\r\n      this.setState({\r\n        login: true,\r\n      })\r\n    }\r\n\r\n    HandleCloseReg = () => {\r\n      this.setState({\r\n        register: false,\r\n      })\r\n    }\r\n\r\n    handleCloseLog = () => {\r\n      this.setState({\r\n        login: false,\r\n      })\r\n    }\r\n\r\n    render() {\r\n      \r\n    return (\r\n      <div className=\"container\">\r\n\r\n          <Grid container spacing={10} style={{padding: 24}}>\r\n            <Grid item xs={12} sm={6} lg={4} xl={12}>\r\n          <AppBar id=\"appBar\" position=\"fixed\" >\r\n            <Toolbar className=\"root\">\r\n            <img src={logo} id=\"logo\" alt=\"Logo\" />\r\n\t\t\t\t<ButtonGroup>\r\n\t\t\t\t\t{!this.props.token && (\r\n            <Register \r\n            updateToken={this.props.updateToken}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{this.props.token ? (\r\n            <ButtonGroup>\r\n              <Button id=\"ishButton\" variant=\"outlined\">Upload</Button>\r\n\t\t\t\t\t\t  <Button id=\"ishButton\" onClick={this.props.clickLogout}>\r\n\t\t\t\t\t\t\tLOGOUT\r\n\t\t\t\t\t\t</Button>\r\n            </ButtonGroup>\r\n\t\t\t\t\t) : (\r\n            <Login \r\n\t\t\t\t\t\tupdateToken={this.props.updateToken} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</ButtonGroup>\r\n            </Toolbar>\r\n          </AppBar>\r\n            </Grid>\r\n          </Grid>\r\n    \r\n    </div>\r\n      );\r\n    }\r\n};","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Home\\Renderbook.tsx",["81","82","83","84","85","86","87","88","89","90","91","92"],"import React, {Component} from 'react'\r\nimport {ReactReader} from 'react-reader'\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Button,\r\n  DialogTitle,\r\n  Typography,\r\n  Toolbar,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\nimport APIURL from '../../helpers/environment';\r\nimport './Home.css'\r\n\r\n\r\ninterface Props {\r\n    token: string,\r\n}\r\n\r\ntype State = {\r\n    myBooks: Array<{\r\n      id: number;\r\n      title: string;\r\n      author: string;\r\n      published: string;\r\n      bookUrl: string;\r\n    }>,\r\n    handleOpen : boolean\r\n}\r\n\r\n\r\nclass RenderBook extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            myBooks: [],\r\n            handleOpen: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.renderBook();\r\n    }\r\n\r\n    renderBook = () => {\r\n      fetch(`${APIURL}/upload/mine`, {\r\n          method: 'GET',\r\n          headers: new Headers({\r\n              'Content-Type': 'application/json',\r\n              'Authorization': `${localStorage.getItem(\"token\")}`\r\n          })\r\n      })\r\n          .then((res) => res.json())\r\n          .then((bookData) => {\r\n              this.setState({\r\n                  myBooks: bookData,\r\n              })\r\n              console.log(\"Books\", this.state.myBooks)\r\n            })\r\n           \r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleOpen: false\r\n        })\r\n    }\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleOpen: true\r\n        })\r\n    }\r\n\r\n    // render () {\r\n    //   return (\r\n    //     <div className=\"renderBook\">\r\n              \r\n                \r\n    //                 {this.state.myBooks.filter(myBooks => {\r\n    //                   return (\r\n    //                     <div key={myBooks.id} >\r\n    //                       <Typography variant=\"h6\" id=\"reviewTitle\"><strong>{myBooks.title}</strong></Typography>\r\n    //                       <ReactReader\r\n    //                         url={myBooks.bookUrl}\r\n    //                         location={'epubcfi(/6/2[cover]!/6)'}\r\n    //                         locationChanged={(epubcifi) => console.log(epubcifi)} />\r\n    //                     </div>\r\n    //                   )\r\n    //                 })},\r\n\r\n                    \r\n    //     </div>\r\n    //   )\r\n    // }\r\n  render () {\r\n    let thisBook = ('https://mrbearnewbucket.s3.us-east-2.amazonaws.com/1633202214242-Greatgatsby.epub')\r\n\r\n    return (\r\n      <div style={{position: 'absolute', height: '100%', width: '100%'}}> \r\n          <Button onClick={this.handleOpen} id=\"ishButton\" variant=\"outlined\">Test Render</Button>\r\n        <ReactReader\r\n          url={thisBook}\r\n            title={'The Great Gatsby'}\r\n          location={'epubcfi(/6/2[cover]!/6)'}\r\n          locationChanged={(epubcifi) => console.log(epubcifi)}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default RenderBook;","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadIndex.tsx",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesIndex.tsx",["93"],"import React from 'react';\r\nimport CommentCreate from './NotesCreate';\r\nimport CommentEdit from './NotesEdit';\r\nimport CommentTable from './NotesTable';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    token: string;\r\n    // updateToken: (newToken: string) => void,\r\n    // clearToken: () => void,\r\n}\r\n\r\ntype State = {\r\n    myNotes: any,\r\n    notesUpdate: any,\r\n    updateActive: boolean,\r\n\r\n}\r\n\r\nexport default class NotesIndex extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            myNotes: [],\r\n            notesUpdate: {},\r\n            updateActive: false,\r\n        }\r\n          \r\n    }\r\n\r\n    fetchNotes = () => {\r\n        console.log(this.props.token);\r\n        fetch(`${APIURL}/notes/mine`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `${localStorage.getItem(\"token\")}`\r\n            })\r\n        })\r\n            .then((res) => res.json())\r\n            .then((bookData) => {\r\n                this.setState({\r\n                    myNotes: bookData\r\n                })\r\n                console.log(\"Notes\", this.state.myNotes)\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchNotes()\r\n    }\r\n\r\n    editUpdateNotes = (notes: any) => {\r\n        this.setState({\r\n            notesUpdate: notes\r\n        })\r\n    }\r\n\r\n    editCreateNotes = (notes: any) => {\r\n        this.setState({\r\n            notesUpdate: notes\r\n        })\r\n    }\r\n\r\n    updateOn = () => {\r\n        this.setState({\r\n            updateActive: true\r\n        })\r\n    }\r\n\r\n    updateOff = () => {\r\n        this.setState({\r\n            updateActive: false\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Container\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                            {/* <CommentCreate\r\n                                fetchComments={this.fetchComments.bind(this)}\r\n                                token={this.props.token}\r\n                                // updateToken={this.props.updateToken}\r\n                                // clearToken={this.props.clearToken}\r\n                            \r\n                            /> : <> </> */}\r\n                            <CommentTable\r\n                                myNotes={this.state.myNotes}\r\n                                editUpdateNotes={this.editUpdateNotes.bind(this)}\r\n                                updateOn={this.updateOn.bind(this)}\r\n                                fetchNotes={this.fetchNotes.bind(this)}\r\n                                token={this.props.token}\r\n                        />\r\n                        {this.state.updateActive ?\r\n                            <CommentEdit\r\n                                notesUpdate={this.state.notesUpdate}\r\n                                updateOff={this.updateOff.bind(this)}\r\n                                token={this.props.token}\r\n                                fetchNotes={this.fetchNotes.bind(this)}\r\n                            />\r\n                            : <></>}\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\helpers\\environment.js",["94"],"let APIURL = '';\r\n\r\nswitch (window.location.hostname) {\r\n\r\n    case 'localhost' || '127.0.0.1':\r\n        APIURL = 'http://localhost:4000';\r\n        break;\r\n    \r\n    case 'ishmael-server-final.herokuapp.com':\r\n        APIURL = 'https://ishmael-server-final.herokuapp.com';\r\n}\r\n\r\nexport default APIURL;","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadTable.tsx",["95"],"import React from 'react';\r\nimport { Card, CardContent, Grid } from '@material-ui/core';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport BorderColorOutlinedIcon from '@material-ui/icons/BorderColorOutlined';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport'./Style.css';\r\nimport APIURL from '../../helpers/environment';\r\nimport mockBook from '../../Assets/unsetcover.png';\r\nimport NotesCreate from '../Notes/NotesCreate';\r\n\r\ntype Props = {\r\n    myBooks: Array<{\r\n        id: number;\r\n        title: string;\r\n        author: string;\r\n        published: string;\r\n        bookUrl: string;\r\n    }>,\r\n    editUpdateBooks: (upload: any) => void,\r\n    updateOn: () => void,\r\n    fetchBooks: () => void,\r\n    token: string\r\n}\r\n\r\ntype State = {\r\n    dialogActive: boolean,\r\n}\r\n\r\nexport default class UploadTable extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            dialogActive: false,\r\n        }\r\n\r\n    }\r\n\r\n    uploadDelete = (upload: any) => {\r\n        fetch(`${APIURL}/upload/delete/${upload.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        }).then(() => this.props.fetchBooks())\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div>\r\n            <Grid container spacing={10} style={{padding: 24}}>\r\n            {this.props.myBooks\r\n            ? this.props.myBooks.map((myBooks) => (\r\n                <Grid item xs={12} sm={6} lg={4} xl={4}>\r\n                    <Card key={myBooks.id} id=\"CardTable\">\r\n                        <CardContent><img src={mockBook} width=\"10%\" height=\"100%\" /></CardContent>\r\n                        <CardContent>Title: {myBooks.title}</CardContent>\r\n                        <CardContent>Author: {myBooks.author}</CardContent>\r\n                        <CardContent>Year Published: {myBooks.published}</CardContent>\r\n                        <NotesCreate bookId={myBooks.id} token={this.props.token} />\r\n                        <CardContent>\r\n                            <IconButton id=\"editBtn\" onClick={() => { this.props.editUpdateBooks(myBooks); this.props.updateOn() }}><BorderColorOutlinedIcon /></IconButton>\r\n                            <IconButton id=\"deleteBtn\" onClick={() => { this.uploadDelete(myBooks)}} ><DeleteOutlineIcon /></IconButton>\r\n                            <hr />\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n                ))\r\n                : undefined}\r\n            </Grid>\r\n            </div>\r\n                \r\n        )\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadEdit.tsx",["96","97"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n} from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    fetchBooks: () => void,\r\n    updateOff: () => void,\r\n    token: string,\r\n    bookUpdate: any,\r\n}\r\n\r\ntype State = {\r\n    title: string;\r\n    author: string;\r\n    published: string;\r\n    file: string;\r\n    handleopen: boolean,\r\n    \r\n}\r\n\r\n\r\nexport default class BookEdit extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.bookUpdate.title,\r\n            author: this.props.bookUpdate.author,\r\n            published: this.props.bookUpdate.published,\r\n            file: this.props.bookUpdate.file,\r\n            handleopen: false,\r\n        }\r\n    }\r\n\r\n    handleUpdate = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/upload/update/${this.props.bookUpdate.id}`, {\r\n            method: 'POST',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            }),\r\n            body: JSON.stringify({title: this.state.title, author: this.state.author, published: this.state.published, file: this.state.file})\r\n        }) .then(() => {\r\n            this.props.updateOff();\r\n            this.props.fetchBooks();\r\n            \r\n        }) \r\n     \r\n    };\r\n\r\n    closeUpdate = () => {\r\n        this.props.updateOff();\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        })\r\n    }\r\n\r\n    singleFileChangedHandler = (event: any) => {\r\n        this.setState({\r\n            file: event.target.files[0]\r\n        });\r\n    }\r\n\r\n    \r\n    render() {\r\n        return (    \r\n            <div className=\"editContainer\">\r\n                <Dialog \r\n                open={true} >\r\n                    <DialogTitle id=\"dialogTitle\">Update Book<IconButton className=\"exit-btn-post-edit\" onClick={this.closeUpdate}><ClearIcon /></IconButton></DialogTitle>\r\n                    <DialogContent id=\"Edit\" >\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit title\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.title}\r\n                            onChange={(event) => this.setState({title: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit author\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.author}\r\n                            onChange={(event) => this.setState({author: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit published\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.published}\r\n                            onChange={(event) => {this.setState({published: event.target.value})}}\r\n                        />\r\n                        <input\r\n                            accept=\"book/*\"\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.singleFileChangedHandler}\r\n                        />\r\n                    </DialogContent>\r\n                        <Button type=\"submit\" id=\"btn\" onClick={this.handleUpdate} >Update</Button>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Uploads\\UploadPost.tsx",["98"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    FormGroup,\r\n    InputLabel,\r\n    Box,\r\n    TextField,\r\n    Dialog,\r\n    DialogContent,\r\n    DialogActions,\r\n    Typography,\r\n    Grid,\r\n    AppBar,\r\n} from '@material-ui/core';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport './Style.css';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ninterface Props {\r\n    token: string,\r\n    fetchBooks: () => void,\r\n    BookCreate: any,\r\n    createOff: () => void,\r\n}\r\n\r\ntype State = {\r\n    title: string;\r\n    author: string;\r\n    published: string;\r\n    file: string;\r\n    handleopen: boolean;\r\n}\r\n\r\nexport default class BookCreate extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props)\r\n        this.state = {\r\n            title: \"\",\r\n            author: \"\",\r\n            published: \"\",\r\n            file: \"\",\r\n            handleopen: false,\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event: React.SyntheticEvent) => {\r\n        event.preventDefault();\r\n        const bookData = new FormData();\r\n        bookData.append('book', this.state.file)\r\n        bookData.append('title', this.state.title)\r\n        bookData.append('author', this.state.author)\r\n        bookData.append('published', this.state.published)\r\n        fetch(`${APIURL}/upload/create`, {\r\n            method: 'POST',\r\n            body: bookData, \r\n            headers: new Headers({\r\n                // 'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then((bookData) => {\r\n                this.setState({\r\n                    title: '',\r\n                    author: '',\r\n                    published: '',\r\n                })\r\n                console.log(bookData)\r\n                this.props.fetchBooks();\r\n                this.handleClose();\r\n            })\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        });\r\n    };\r\n\r\n    setTitle(event: string) {\r\n        this.setState({\r\n            title: (event)\r\n        })\r\n    }\r\n\r\n    setAuthor(event: string) {\r\n        this.setState({\r\n            author: (event)\r\n        })\r\n    }\r\n\r\n    setPublished(event: string) {\r\n        this.setState({\r\n            published: (event)\r\n        })\r\n    }\r\n    \r\n    singleFileChangedHandler = (event: any) => {\r\n        this.setState({\r\n            file: event.target.files[0]\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <Grid container spacing={2} style={{padding: 2}}>\r\n                    <Grid item xs={12} sm={6} lg={4} xl={12}>\r\n                        <Button onClick={this.handleOpen} id=\"ishButton\" variant=\"outlined\">Upload</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Dialog open={this.state.handleopen} onClose={this.handleClose}>\r\n                    <DialogContent id=\"uploads\">\r\n                        <Typography variant=\"h6\" id=\"dialogTitle\"><strong>Book Details</strong></Typography>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"Title\" id=\"titleLabel\">Title</InputLabel>\r\n                            <TextField\r\n                                id=\"titleInput\"\r\n                                name=\"title\"\r\n                                value={this.state.title}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => this.setTitle(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"author\" id=\"authorLabel\">Author</InputLabel>\r\n                            <TextField\r\n                                id=\"authorInput\"\r\n                                name=\"author\"\r\n                                value={this.state.author}\r\n                                onChange={(e) => this.setAuthor(e.target.value)}\r\n                            >Date</TextField>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <InputLabel htmlFor=\"published\" id=\"publishedLabel\">Published</InputLabel>\r\n                            <TextField\r\n                                value={this.state.published}\r\n                                name=\"published\"\r\n                                id=\"publishedInput\"\r\n                                onChange={(e) => this.setPublished(e.target.value)}\r\n                            />\r\n                        </FormGroup>\r\n                        <input\r\n                            accept=\"books/*\"\r\n                            className=\"inputBook\"\r\n                            id=\"contained-button-file\"\r\n                            type=\"file\"\r\n                            onChange={this.singleFileChangedHandler}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions id=\"btns\">\r\n                        <Box justifyContent=\"center\">\r\n                            <Button onClick={this.handleClose} className=\"createBookBtn\">\r\n                                <SkipPreviousIcon id=\"backIcon\" />{\" \"}{\" \"}Back</Button>\r\n                            <Button type=\"submit\" className=\"createBook\" id=\"ishButton\"onClick={this.handleSubmit} ><strong>Upload</strong></Button>\r\n                        </Box>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div >\r\n            \r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Auth\\Login.tsx",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Auth\\Register.tsx",[],"C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesEdit.tsx",["99","100"],"import React from 'react';\r\nimport {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    TextField,\r\n    Box,\r\n} from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    fetchNotes: () => void,\r\n    updateOff: () => void,\r\n    token: string,\r\n    notesUpdate: any,\r\n}\r\n\r\ntype State = {\r\n    date: string;\r\n    title: string;\r\n    entry: string;\r\n    handleopen: boolean,\r\n\r\n}\r\n\r\nexport default class NotesEdit extends React.Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = {\r\n            date: this.props.notesUpdate.date,\r\n            title: this.props.notesUpdate.title,\r\n            entry: this.props.notesUpdate.entry,\r\n            handleopen: false,\r\n\r\n        }\r\n    }\r\n\r\n    handleUpdate = (event: any) => {\r\n        event.preventDefault();\r\n        fetch(`${APIURL}/notes/${this.props.notesUpdate.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({ date: this.state.date, title: this.state.title, entry: this.state.entry, }),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        })\r\n            .then(() => {\r\n                this.props.fetchNotes();\r\n                this.props.updateOff();\r\n\r\n            })\r\n    };\r\n\r\n    closeUpdate = () => {\r\n        this.props.updateOff();\r\n    }\r\n\r\n    handleOpen = () => {\r\n        this.setState({\r\n            handleopen: true,\r\n        });\r\n    }\r\n\r\n    handleClose = () => {\r\n        this.setState({\r\n            handleopen: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"editContainer\">\r\n                <Dialog open={true} onClose={this.closeUpdate}>\r\n                    <DialogTitle id=\"dialogTitle\">Update Note<IconButton className=\"exit-btn-post-edit\" onClick={this.closeUpdate}><ClearIcon /></IconButton></DialogTitle>\r\n                    <DialogContent id=\"Edit\" >\r\n                        \r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit date\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.date}\r\n                            onChange={(event) => this.setState({date: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit title\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.title}\r\n                            onChange={(event) => this.setState({title: event.target.value})}\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            label=\"edit entry\"\r\n                            type=\"text\"\r\n                            fullWidth\r\n                            value={this.state.entry}\r\n                            onChange={(event) => this.setState({entry: event.target.value})}\r\n                        />\r\n                            <Button type=\"submit\" id=\"btn\" onClick={this.handleUpdate}>Update</Button>\r\n                    </DialogContent>\r\n                        <DialogActions id=\"Createbtn\">\r\n                        </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesTable.tsx",["101"],"import React from 'react';\r\nimport { Card, CardContent, Typography } from '@material-ui/core';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport APIURL from '../../helpers/environment';\r\n\r\ntype Props = {\r\n    myNotes: Array<{\r\n        id: number;\r\n        date: string;\r\n        title: string;\r\n        entry: string;\r\n        userId: number;\r\n    }>,\r\n    editUpdateNotes: (submission: any) => void,\r\n    updateOn: () => void,\r\n    fetchNotes: () => void,\r\n    token: string\r\n}\r\n\r\nexport default class notesTable extends React.Component<Props> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n   noteDelete = (notes: any) => {\r\n        fetch(`${APIURL}/notes/${notes.id}`, {\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': this.props.token\r\n            })\r\n        }).then(() => this.props.fetchNotes())\r\n    };\r\n\r\n        render () {\r\n            return (\r\n                <div>\r\n                {this.props.myNotes\r\n                ? this.props.myNotes.map((myNotes) => (\r\n                    <Card key={myNotes.id}>\r\n                        <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                            Date\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" >\r\n                          {myNotes.date}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                            Title\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">{myNotes.title}</Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h4\">\r\n                            Entry\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\">{myNotes.entry}</Typography>\r\n                        <CardContent>\r\n                            <IconButton onClick={() => { this.props.editUpdateNotes(myNotes); this.props.updateOn() }}><CreateIcon /></IconButton>\r\n                            <IconButton className=\"delete-btn\" onClick={() => { this.noteDelete(myNotes)}} ><ClearIcon /></IconButton>\r\n                        </CardContent>\r\n                        </CardContent>\r\n                    </Card>\r\n                ))\r\n                : undefined} \r\n                </div>  \r\n            )\r\n        }\r\n}\r\n\r\n","C:\\Users\\segab\\ElevenFiftyProjects\\Red\\ishmael-final\\ishmael-client-final\\src\\Components\\Notes\\NotesCreate.tsx",[],{"ruleId":"102","severity":1,"message":"103","line":8,"column":10,"nodeType":"104","messageId":"105","endLine":8,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":10,"column":8,"nodeType":"104","messageId":"105","endLine":10,"endColumn":12},{"ruleId":"102","severity":1,"message":"107","line":4,"column":3,"nodeType":"104","messageId":"105","endLine":4,"endColumn":9},{"ruleId":"102","severity":1,"message":"108","line":5,"column":3,"nodeType":"104","messageId":"105","endLine":5,"endColumn":16},{"ruleId":"102","severity":1,"message":"109","line":6,"column":3,"nodeType":"104","messageId":"105","endLine":6,"endColumn":20},{"ruleId":"102","severity":1,"message":"110","line":7,"column":3,"nodeType":"104","messageId":"105","endLine":7,"endColumn":16},{"ruleId":"102","severity":1,"message":"111","line":9,"column":3,"nodeType":"104","messageId":"105","endLine":9,"endColumn":14},{"ruleId":"102","severity":1,"message":"112","line":10,"column":3,"nodeType":"104","messageId":"105","endLine":10,"endColumn":13},{"ruleId":"102","severity":1,"message":"113","line":11,"column":3,"nodeType":"104","messageId":"105","endLine":11,"endColumn":10},{"ruleId":"102","severity":1,"message":"114","line":13,"column":8,"nodeType":"104","messageId":"105","endLine":13,"endColumn":17},{"ruleId":"102","severity":1,"message":"115","line":14,"column":8,"nodeType":"104","messageId":"105","endLine":14,"endColumn":17},{"ruleId":"102","severity":1,"message":"116","line":15,"column":8,"nodeType":"104","messageId":"105","endLine":15,"endColumn":24},{"ruleId":"102","severity":1,"message":"117","line":16,"column":8,"nodeType":"104","messageId":"105","endLine":16,"endColumn":18},{"ruleId":"102","severity":1,"message":"118","line":17,"column":8,"nodeType":"104","messageId":"105","endLine":17,"endColumn":26},{"ruleId":"102","severity":1,"message":"119","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":3,"column":1,"nodeType":"122","messageId":"123","endLine":11,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":56,"column":38,"nodeType":"126","endLine":56,"endColumn":86},{"ruleId":"102","severity":1,"message":"110","line":5,"column":5,"nodeType":"104","messageId":"105","endLine":5,"endColumn":18},{"ruleId":"127","severity":1,"message":"128","line":45,"column":9,"nodeType":"129","messageId":"130","endLine":52,"endColumn":17,"fix":"131"},{"ruleId":"102","severity":1,"message":"132","line":13,"column":5,"nodeType":"104","messageId":"105","endLine":13,"endColumn":11},{"ruleId":"102","severity":1,"message":"133","line":9,"column":5,"nodeType":"104","messageId":"105","endLine":9,"endColumn":8},{"ruleId":"102","severity":1,"message":"134","line":11,"column":8,"nodeType":"104","messageId":"105","endLine":11,"endColumn":14},{"ruleId":"135","severity":1,"message":"136","line":23,"column":5,"nodeType":"137","messageId":"138","endLine":25,"endColumn":6},"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Home' is defined but never used.","'Dialog' is defined but never used.","'DialogContent' is defined but never used.","'DialogContentText' is defined but never used.","'DialogActions' is defined but never used.","'DialogTitle' is defined but never used.","'Typography' is defined but never used.","'Toolbar' is defined but never used.","'CloseIcon' is defined but never used.","'ClearIcon' is defined but never used.","'SkipPreviousIcon' is defined but never used.","'IconButton' is defined but never used.","'ImportContactsIcon' is defined but never used.","'CommentCreate' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"139","text":"140"},"'AppBar' is defined but never used.","'Box' is defined but never used.","'Rating' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",[1502,1504],"."]